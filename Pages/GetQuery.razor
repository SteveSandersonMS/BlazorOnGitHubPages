@page "/getquery"
@using System.IO;
@using BlazorOnGitHubPages;
@using System.Windows;
@inject BlazorOnGitHubPages.Data.QueryService service
@inject Microsoft.JSInterop.IJSRuntime JS

@if (null == status)
{
    <h3>Upload Original xls report to get Query for Jitter cloud </h3>
    <InputFile OnChange="HandleSelection" />
}
else
{
    <p>@status</p>
    <h5>Your Query is generated.</h5>
    <CopyToClipboard Text=@QueryStr />

}


@code {
    string QueryStr;
    string status;
    MemoryStream outputStream;

    async Task HandleSelection(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            // Just load into .NET memory to show it can be done
            // Alternatively it could be saved to disk, or parsed in memory, or similar
            var ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);

            //outputStream = service.CreateExcel(ms, file.Name);
            QueryStr = service.CreateQuery(ms, file.Name);

            status = $"Finished loading {file.Name}";
        }
    }

    protected async void CreateDocument()
    {
        //outputStream = service.CreateExcel(inputStream, fName);
        await JS.SaveAs("Output.xlsx", outputStream.ToArray());
    }
}